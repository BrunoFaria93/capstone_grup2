"""create new tables with UUID

Revision ID: ef5f7109ac76
Revises: 
Create Date: 2022-04-28 18:19:05.590174

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ef5f7109ac76'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hello_world',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('greeting', sa.String(), nullable=False),
    sa.Column('last_visit', sa.DateTime(), nullable=True),
    sa.Column('visits', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_payments',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type', sa.String(length=60), nullable=False),
    sa.Column('status', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('orders_ratings',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('nota', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_status',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('users_classes',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Numeric(asdecimal=False), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('qtt_stock', sa.Integer(), nullable=True),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('category_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('user_class', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_class'], ['users_classes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('orders',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('subtotal', sa.Numeric(asdecimal=False), nullable=True),
    sa.Column('total', sa.Numeric(asdecimal=False), nullable=True),
    sa.Column('status_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('rating_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('payment_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['orders_payments.id'], ),
    sa.ForeignKeyConstraint(['rating_id'], ['orders_ratings.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['orders_status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('discount', sa.Numeric(asdecimal=False), nullable=True),
    sa.Column('sale_value', sa.Numeric(asdecimal=False), nullable=True),
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders_products')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('products')
    op.drop_table('users_classes')
    op.drop_table('orders_status')
    op.drop_table('orders_ratings')
    op.drop_table('orders_payments')
    op.drop_table('hello_world')
    op.drop_table('categories')
    # ### end Alembic commands ###
